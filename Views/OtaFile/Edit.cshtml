@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Edit OTA File";
    var id = ViewBag.Id;
}

<div class="p-6 flex justify-center">
    <div class="w-full max-w-2xl">
        <!-- Breadcrumb -->
        <div class="mb-4 text-sm">
            <a href="/OtaFile" class="text-teal-500 font-semibold hover:text-teal-600 transition-colors">OTA File</a> /
            <span class="text-gray-500">Edit</span>
        </div>

        <!-- Card Form -->
        <div class="bg-white shadow rounded-lg border border-gray-200 p-6">
            <h2 class="text-lg font-semibold text-gray-800 mb-4">Edit OTA File</h2>

            <form id="editOtaFileForm" class="space-y-4">
                <!-- OtaDesc -->
                <div>
                    <label for="OtaDesc" class="block text-sm font-medium text-gray-700 mb-1">Deskripsi</label>
                    <input type="text" id="OtaDesc" name="OtaDesc" required
                        class="w-full border border-gray-300 rounded px-3 py-2 text-sm focus:ring-2 focus:ring-teal-500">
                </div>

                <!-- OtaFilename -->
                <div>
                    <label for="OtaFilename" class="block text-sm font-medium text-gray-700 mb-1">Nama File</label>
                    <input type="text" id="OtaFilename" name="OtaFilename" required disabled
                        class="w-full border border-gray-300 rounded px-3 py-2 text-sm focus:ring-2 focus:ring-teal-500">
                </div>

                <!-- OtaAttachment -->
                <div>
                    <label for="OtaAttachment" class="block text-sm font-medium text-gray-700 mb-1">Attachment
                        (opsional)</label>
                    <input type="file" id="OtaAttachment" name="OtaAttachment"
                        class="w-full text-sm text-gray-700 border border-gray-300 rounded px-2 py-2 focus:ring-2 focus:ring-teal-500">
                    <p class="text-xs text-gray-500 mt-1">Kosongkan jika tidak ingin mengganti file.</p>

                    <!-- Preview area -->
                    <div id="filePreview" class="mt-2"></div>
                </div>

                <!-- OtaStatus -->
                <div>
                    <label for="OtaStatus" class="block text-sm font-medium text-gray-700 mb-1">Status</label>
                    <select id="OtaStatus" name="OtaStatus"
                        class="w-full border border-gray-300 rounded px-3 py-2 text-sm focus:ring-2 focus:ring-teal-500">
                        <option value="1">Active</option>
                        <option value="0">Inactive</option>
                    </select>
                </div>

                <!-- Buttons -->
                <div class="flex justify-end space-x-2 pt-4">
                    <button type="button" id="btnCancel"
                        class="px-4 py-2 bg-gray-200 hover:bg-gray-300 text-gray-700 rounded-md shadow text-sm font-medium transition-colors">
                        Cancel
                    </button>
                    <button type="submit" id="btnSave"
                        class="px-4 py-2 bg-orange-500 hover:bg-orange-600 text-white rounded-md shadow text-sm font-medium transition-colors">
                        Update
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        const otaId = @id;

        // === Load data OTA File untuk pre-fill form ===
        async function loadOtaFile() {
            try {
                const res = await fetch(`http://localhost:5125/api/otafiles/${otaId}`);
                if (!res.ok) throw new Error("Gagal mengambil data");
                const data = await res.json();

                $('#OtaDesc').val(data.otaDesc);
                $('#OtaFilename').val(data.otaFilename);
                $('#OtaStatus').val(data.otaStatus ?? 1);

                // === File preview / download ===
                if (data.otaAttachment) {
                    renderFilePreview(data.otaAttachment);
                }

            } catch (err) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Gagal memuat data OTA File'
                });
            }
        }

        // === Helper: Render file preview ===
        function renderFilePreview(fileUrl) {
            const ext = fileUrl.split('.').pop().toLowerCase();
            let previewHtml = '';

            if (['png', 'jpg', 'jpeg', 'gif', 'bmp', 'webp'].includes(ext)) {
                // ✅ Preview image
                previewHtml = `<img src="${fileUrl}" alt="Preview" class="max-h-40 rounded border">`;

            } else if (ext === 'pdf') {
                // ✅ Preview PDF
                previewHtml = `<embed src="${fileUrl}" type="application/pdf" class="w-full h-64 border rounded" />`;

            } else {
                // ✅ Default: Download link
                previewHtml = `
                                    <a href="${fileUrl}" target="_blank" class="px-4 py-2 bg-teal-600 text-white rounded hover:bg-teal-700">
                                        Download File
                                    </a>`;
            }

            $('#filePreview').html(previewHtml);
        }

        // === Save/update OTA File ===
        $('#btnSave').on('click', async function (e) {
            e.preventDefault();
            const btn = $(this).prop('disabled', true).text('Updating...');

            try {
                const otaDesc = $('#OtaDesc').val().trim();
                const otaFilename = $('#OtaFilename').val().trim();
                const otaStatus = parseInt($('#OtaStatus').val());
                const fileInput = $('#OtaAttachment')[0];

                if (!otaDesc || !otaFilename) {
                    showAlert('warning', 'Oops...', 'Deskripsi dan Nama File wajib diisi');
                    btn.prop('disabled', false).text('Update');
                    return;
                }

                const formData = new FormData();
                formData.append("OtaDesc", otaDesc);
                formData.append("OtaFilename", otaFilename);
                formData.append("OtaStatus", otaStatus);

                if (fileInput.files.length > 0) {
                    const file = fileInput.files[0];
                    if (!validateFile(file)) {
                        btn.prop('disabled', false).text('Update');
                        return;
                    }
                    formData.append("OtaAttachment", file);
                }

                const res = await fetch(`http://localhost:5125/api/otafiles/${otaId}`, {
                    method: 'PUT',
                    body: formData
                });

                const result = await res.json();

                if (res.ok) {
                    await Swal.fire({
                        icon: 'success',
                        title: 'Berhasil',
                        text: 'OTA File berhasil diperbarui',
                        timer: 2000,
                        showConfirmButton: false
                    });
                    window.location.href = '/OtaFile/Index';
                } else {
                    showAlert('error', 'Gagal', result.message || 'Gagal update OTA File');
                }
            } catch (err) {
                console.error(err);
                showAlert('error', 'Error', 'Terjadi kesalahan saat update OTA File');
            } finally {
                btn.prop('disabled', false).text('Update');
            }
        });

        // === Helper alert ===
        function showAlert(icon, title, text) {
            Swal.fire({ icon, title, text });
        }

        // === Helper validasi file ===
        function validateFile(file) {
            const allowedExtensions = ['.bin', '.zip', '.rar', '.pdf', '.xls', '.xlsx', '.csv'];
            const maxSizeMB = 5;

            const fileExt = file.name.toLowerCase().slice(file.name.lastIndexOf('.'));
            if (!allowedExtensions.includes(fileExt)) {
                showAlert('error', 'Format tidak valid', `Hanya file dengan format: ${allowedExtensions.join(', ')} yang diperbolehkan`);
                return false;
            }

            if (file.size > maxSizeMB * 1024 * 1024) {
                showAlert('error', 'File terlalu besar', `Ukuran maksimal file adalah ${maxSizeMB} MB`);
                return false;
            }

            return true;
        }

        // Cancel button
        $('#btnCancel').on('click', function () {
            window.location.href = '/OtaFile/Index';
        });

        $('#OtaAttachment').on('change', function () {
            if (this.files.length > 0) {
                const file = this.files[0];
                $('#OtaFilename').val(file.name); // langsung pakai full filename
            }
        });

        // === Init ===
        loadOtaFile();
    </script>
}
