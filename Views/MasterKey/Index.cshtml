<a href="#" class="text-teal-500 font-semibold hover:text-teal-600 transition-colors">Master Key</a> /
<span class="text-gray-500">Inquiry</span>

<div class="max-w-6xl mx-auto p-6">
    <!-- Header -->
    <div class="flex items-center justify-between mb-4">

        <a asp-controller="MasterKey" asp-action="Create"
            class="bg-teal-500 hover:bg-teal-600 text-white px-4 py-2 rounded text-sm shadow">
            + Tambah Master Key
        </a>
    </div>

    <!-- Controls -->
    <div class="flex items-center justify-between mb-3 text-sm">
        <div>
            Show
            <select id="pageSize" class="border rounded px-2 py-1 text-sm">
                <option>5</option>
                <option selected>10</option>
                <option>25</option>
            </select>
            entries
        </div>
        <div>
            Search:
            <input type="text" id="searchBox" class="border rounded px-2 py-1 text-sm" placeholder="Search...">
        </div>
    </div>

    <!-- Tabel -->
    <div class="overflow-x-auto bg-white rounded-lg shadow">
        <table class="min-w-full text-sm text-left text-gray-600">
            <thead class="bg-gray-100 border-b">
                <tr>
                    <th class="px-4 py-3 cursor-pointer sort" data-field="mkeyCode">Code</th>
                    <th class="px-4 py-3 cursor-pointer sort" data-field="mkeyDesc">Description</th>
                    <th class="px-4 py-3 cursor-pointer sort" data-field="mkeyCreateDate">Register Date</th>
                    <th class="px-4 py-3 cursor-pointer sort" data-field="mkeyUpdateDate">Update Date</th>
                    <th class="px-4 py-3 text-center">Action</th>
                </tr>
            </thead>

            <tbody id="rows"></tbody>
        </table>
    </div>

    <!-- Info + Pagination -->
    <div class="flex items-center justify-between mt-4 text-sm">
        <p id="info">Showing 0 entries</p>
        <div class="flex items-center gap-1" id="pagination"></div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    const API_BASE = "http://localhost:5125";
    let allData = [];
    let page = 1;
    let pageSize = 10;
    let search = "";
    let sortField = null;
    let sortDir = 'asc'; // asc | desc

    function fmtDate(iso) {
        if (!iso) return "-";
        const d = new Date(iso);
        const pad = n => n.toString().padStart(2, "0");
        return `${pad(d.getDate())}-${pad(d.getMonth() + 1)}-${d.getFullYear()} ` +
            `${pad(d.getHours())}:${pad(d.getMinutes())}:${pad(d.getSeconds())}`;
    }

    function render() {
        // 🔍 Filter
        let filtered = allData.filter(x =>
            x.mkeyCode.toLowerCase().includes(search) ||
            (x.mkeyDesc ?? "").toLowerCase().includes(search)
        );

        // 🔑 Sorting
        if (sortField) {
            filtered.sort((a, b) => {
                let valA = a[sortField] ?? "";
                let valB = b[sortField] ?? "";

                if (sortField.includes("Date")) {
                    valA = new Date(valA);
                    valB = new Date(valB);
                } else {
                    valA = valA.toString().toLowerCase();
                    valB = valB.toString().toLowerCase();
                }

                if (valA < valB) return sortDir === 'asc' ? -1 : 1;
                if (valA > valB) return sortDir === 'asc' ? 1 : -1;
                return 0;
            });
        }

        // 🔄 Pagination
        const total = filtered.length;
        const totalPages = Math.ceil(total / pageSize);
        if (page > totalPages) page = totalPages || 1;

        const start = (page - 1) * pageSize;
        const end = start + pageSize;
        const pageData = filtered.slice(start, end);

        // 🔄 Render rows
        $("#rows").empty();
        if (pageData.length === 0) {
            $("#rows").append(`<tr><td colspan="5" class="text-center py-4">No data</td></tr>`);
        } else {
            $.each(pageData, function (i, item) {
                $("#rows").append(`
                <tr class="border-b hover:bg-gray-50">
                    <td class="px-4 py-2">${item.mkeyCode}</td>
                    <td class="px-4 py-2">${item.mkeyDesc ?? "-"}</td>
                    <td class="px-4 py-2">${fmtDate(item.mkeyCreateDate)}</td>
                    <td class="px-4 py-2">${fmtDate(item.mkeyUpdateDate)}</td>
                    <td class="px-4 py-2 text-center">
                        <button class="editBtn bg-orange-400 hover:bg-orange-500 text-white px-3 py-1 rounded mr-1"
                                data-id="${item.mkeyId}">✎</button>
                        <button class="deleteBtn bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded"
                                data-id="${item.mkeyId}">✕</button>
                    </td>
                </tr>
            `);
            });
        }

        // 🔎 Info
        $("#info").text(`Showing ${total === 0 ? 0 : start + 1} to ${Math.min(end, total)} of ${total} entries`);

        // 🔄 Pagination control
        $("#pagination").empty();
        if (totalPages > 1) {
            $("#pagination").append(`<button class="pageBtn px-3 py-1 border rounded ${page === 1 ? 'bg-gray-200 text-gray-500' : ''}" data-page="${page - 1}" ${page === 1 ? 'disabled' : ''}>Previous</button>`);
            let startPage = Math.max(1, page - 2);
            let endPage = Math.min(totalPages, page + 2);
            for (let p = startPage; p <= endPage; p++) {
                $("#pagination").append(`<button class="pageBtn px-3 py-1 border rounded ${p === page ? 'bg-blue-500 text-white' : ''}" data-page="${p}">${p}</button>`);
            }
            $("#pagination").append(`<button class="pageBtn px-3 py-1 border rounded ${page === totalPages ? 'bg-gray-200 text-gray-500' : ''}" data-page="${page + 1}" ${page === totalPages ? 'disabled' : ''}>Next</button>`);
        }
    }

    // ⬆⬇ Header click sort
    $(document).on("click", ".sort", function () {
        const field = $(this).data("field");
        if (sortField === field) {
            sortDir = (sortDir === 'asc' ? 'desc' : 'asc');
        } else {
            sortField = field;
            sortDir = 'asc';
        }
        render();

        // indikator
        $(".sort").each(function () {
            $(this).text($(this).text().replace(/ ↑| ↓/g, ''));
        });
        $(this).text($(this).text() + (sortDir === 'asc' ? ' ↑' : ' ↓'));
    });

    // 🔄 Load data dari API
    function load() {
        $.get(`${API_BASE}/api/sysmkeys`, function (res) {
            allData = res || [];
            page = 1;
            render();
        });
    }

    // Search
    $("#searchBox").on("keyup", function () {
        search = $(this).val().toLowerCase();
        page = 1;
        render();
    });

    // Change pageSize
    $("#pageSize").on("change", function () {
        pageSize = parseInt($(this).val());
        page = 1;
        render();
    });

    // Pagination click
    $(document).on("click", ".pageBtn", function () {
        const newPage = parseInt($(this).data("page"));
        if (!isNaN(newPage) && newPage >= 1) {
            page = newPage;
            render();
        }
    });

    // Delete
    $(document).on("click", ".deleteBtn", function () {
        const id = $(this).data("id");
        Swal.fire({
            title: 'Yakin hapus?',
            text: "Data Master Key ini akan dihapus permanen!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Ya, hapus',
            cancelButtonText: 'Batal'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: `${API_BASE}/api/sysmkeys/${id}`,
                    method: "DELETE",
                    success: function () {
                        Swal.fire('Terhapus!', 'Data berhasil dihapus.', 'success')
                            .then(() => load());
                    },
                    error: function (xhr) {
                        Swal.fire('Gagal!', xhr.responseJSON?.message || "Tidak bisa menghapus.", 'error');
                    }
                });
            }
        });
    });

    // Edit
    $(document).on("click", ".editBtn", function () {
        const id = $(this).data("id");
        window.location.href = `/MasterKey/Edit/${id}`;
    });

    $(document).ready(load);

</script>
